{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nclass RegisterPageComponent {\n  constructor(router, route) {\n    this.router = router;\n    this.route = route;\n    this.registerForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      secondLastName: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      phone: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(15)]),\n      genre: new FormControl('', [Validators.required]),\n      medicaSpecialisation: new FormControl('', [Validators.required]),\n      medicalCenter: new FormControl('', [Validators.required])\n    });\n  }\n  registerbutton() {\n    console.log(this.registerForm.value);\n    if (this.registerForm.valid) {\n      //valida que el formulario sea valido y si lo es pasaremos a iniciar sesion\n      this.router.navigate(['login', this.registerForm.value]);\n    } else {\n      alert('Registro invalido');\n    }\n  }\n}\nRegisterPageComponent.ɵfac = function RegisterPageComponent_Factory(t) {\n  return new (t || RegisterPageComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nRegisterPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterPageComponent,\n  selectors: [[\"app-register-page\"]],\n  decls: 29,\n  vars: 1,\n  consts: [[1, \"login-box\"], [1, \"login-form\", 3, \"formGroup\"], [1, \"login-title\"], [\"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Escribe tu nombre\", 1, \"login-input\"], [\"formControlName\", \"lastName\", \"type\", \"text\", \"placeholder\", \"Escribe tu apellido paterno\", 1, \"login-input\"], [\"formControlName\", \"secondLastName\", \"type\", \"text\", \"placeholder\", \"Escribe tu aepllido materno\", 1, \"login-input\"], [\"formControlName\", \"email\", \"type\", \"email\", \"placeholder\", \"Escribe tu correro electronico\", 1, \"login-input\"], [\"formControlName\", \"password\", \"type\", \"text\", \"placeholder\", \"Escribe tu contrase\\u00F1a\", 1, \"login-input\"], [\"formControlName\", \"confirmPassword\", \"type\", \"text\", \"placeholder\", \"Repite tu contrase\\u00F1a\", 1, \"login-input\"], [\"formControlName\", \"phone\", \"type\", \"number\", \"placeholder\", \"Escribe tu numero telefonico\", 1, \"login-input\"], [\"formControlName\", \"genre\", \"type\", \"text\", \"placeholder\", \"Seleciona tu genero\", 1, \"login-input\"], [\"formControlName\", \"medicaSpecialisation\", \"type\", \"text\", \"placeholder\", \"Selecciona tu especialidad medica\", 1, \"login-input\"], [\"formControlName\", \"medicalCenter\", \"type\", \"text\", \"placeholder\", \"Escribe el nombre del centro medico donde trabajas\", 1, \"login-input\"], [\"type\", \"submit\", 1, \"login-buttom\", 3, \"click\"], [\"routerLink\", \"/login\", 2, \"padding-left\", \"20px\"]],\n  template: function RegisterPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Crear una cuenta\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3)(5, \"br\")(6, \"input\", 4)(7, \"br\")(8, \"input\", 5)(9, \"br\")(10, \"input\", 6)(11, \"br\")(12, \"input\", 7)(13, \"br\")(14, \"input\", 8)(15, \"br\")(16, \"input\", 9)(17, \"br\")(18, \"input\", 10)(19, \"br\")(20, \"input\", 11)(21, \"br\")(22, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 0)(24, \"Button\", 13);\n      i0.ɵɵlistener(\"click\", function RegisterPageComponent_Template_Button_click_24_listener() {\n        return ctx.registerbutton();\n      });\n      i0.ɵɵtext(25, \"Registrarse\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\")(27, \"a\", 14);\n      i0.ɵɵtext(28, \"Ya tienes una cuenta? Inicia sesion.\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RegisterPageComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","RegisterPageComponent","constructor","router","route","registerForm","name","required","lastName","secondLastName","email","password","minLength","confirmPassword","phone","maxLength","genre","medicaSpecialisation","medicalCenter","registerbutton","console","log","value","valid","navigate","alert","i0","ɵɵdirectiveInject","i1","Router","ActivatedRoute","selectors","decls","vars","consts","template","RegisterPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","RegisterPageComponent_Template_Button_click_24_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\diego\\OneDrive\\Escritorio\\Github\\AndorMed-DLC\\ANDORMED-APP\\src\\app\\components\\register-page\\register-page.component.ts","C:\\Users\\diego\\OneDrive\\Escritorio\\Github\\AndorMed-DLC\\ANDORMED-APP\\src\\app\\components\\register-page\\register-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Route, Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register-page',\r\n  templateUrl: './register-page.component.html',\r\n  styleUrls: ['./register-page.component.scss']\r\n})\r\nexport class RegisterPageComponent {\r\n\r\n  registerForm = new FormGroup({\r\n    name: new FormControl('', [Validators.required]),\r\n    lastName: new FormControl('', [Validators.required]),\r\n    secondLastName: new FormControl('', [Validators.required]),\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n    confirmPassword: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n    phone: new FormControl('', [Validators.required, Validators.minLength(10),Validators.maxLength(15)]),\r\n    genre: new FormControl('', [Validators.required]),\r\n    medicaSpecialisation: new FormControl('', [Validators.required]),\r\n    medicalCenter: new FormControl('', [Validators.required]),\r\n  \r\n  });\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute) { }\r\n\r\n  registerbutton() {\r\n    console.log(this.registerForm.value);\r\n    if(this.registerForm.valid){   //valida que el formulario sea valido y si lo es pasaremos a iniciar sesion\r\n      this.router.navigate(['login', this.registerForm.value]);\r\n    }else{\r\n      alert('Registro invalido');\r\n    }\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"login-box\">\r\n    <form [formGroup]=\"registerForm\" class=\"login-form\">\r\n        <h1 class=\"login-title\">Crear una cuenta</h1>\r\n        <input class=\"login-input\" formControlName=\"name\" type=\"text\" placeholder=\"Escribe tu nombre\">\r\n        <br>\r\n        <input class=\"login-input\" formControlName=\"lastName\" type=\"text\" placeholder=\"Escribe tu apellido paterno\">\r\n        <br>\r\n        <input class=\"login-input\" formControlName=\"secondLastName\" type=\"text\" placeholder=\"Escribe tu aepllido materno\">\r\n        <br>\r\n        <input class=\"login-input\" formControlName=\"email\" type=\"email\" placeholder=\"Escribe tu correro electronico\">\r\n        <br>\r\n        <input class=\"login-input\" formControlName=\"password\" type=\"text\" placeholder=\"Escribe tu contraseña\">\r\n        <br>\r\n        <input class=\"login-input\" formControlName=\"confirmPassword\" type=\"text\" placeholder=\"Repite tu contraseña\">\r\n        <br>\r\n        <input class=\"login-input\" formControlName=\"phone\" type=\"number\" placeholder=\"Escribe tu numero telefonico\">\r\n        <br>\r\n        <input class=\"login-input\" formControlName=\"genre\" type=\"text\" placeholder=\"Seleciona tu genero\">\r\n        <br>\r\n        <input class=\"login-input\" formControlName=\"medicaSpecialisation\" type=\"text\" placeholder=\"Selecciona tu especialidad medica\">\r\n        <br>\r\n        <input class=\"login-input\" formControlName=\"medicalCenter\" type=\"text\" placeholder=\"Escribe el nombre del centro medico donde trabajas\">\r\n        </form>\r\n      </div>\r\n      <div class=\"login-box\"><Button type=\"submit\" class=\"login-buttom\" (click)=\"registerbutton()\">Registrarse</Button>\r\n      <div><a style=\"padding-left: 20px;\" routerLink=\"/login\">Ya tienes una cuenta? Inicia sesion.</a></div>\r\n      </div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}