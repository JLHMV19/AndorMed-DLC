{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nlet LoginPageComponent = class LoginPageComponent {\n  constructor(router, route) {\n    this.router = router;\n    this.route = route;\n    this.loginForm = new FormGroup({\n      user: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      password: new FormControl('')\n    });\n  }\n  login() {\n    console.log(this.loginForm.value);\n    if (this.loginForm.valid) {\n      //valida que el formulario sea valido y si lo es pasaremos a home\n      this.router.navigate(['start', this.loginForm.value]);\n    } else {\n      alert('Formulario invalido');\n    }\n  }\n};\nLoginPageComponent = __decorate([Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})], LoginPageComponent);\nexport { LoginPageComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","Component","LoginPageComponent","constructor","router","route","loginForm","user","required","minLength","password","login","console","log","value","valid","navigate","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\diego\\OneDrive\\Escritorio\\Github\\AndorMed-DLC\\ANDORMED-APP\\src\\app\\components\\login-page\\login-page.component.ts"],"sourcesContent":["import { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Route, Router, ActivatedRoute } from '@angular/router';\r\nimport { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent {\r\n\r\n  loginForm = new FormGroup({\r\n    user: new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n    password: new FormControl('')\r\n  });\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute) { }\r\n\r\n  login() {\r\n    console.log(this.loginForm.value);\r\n    if(this.loginForm.valid){   //valida que el formulario sea valido y si lo es pasaremos a home\r\n      this.router.navigate(['start', this.loginForm.value]);\r\n    }else{\r\n      alert('Formulario invalido');\r\n    }\r\n  }\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,SAAS,QAAQ,eAAe;AAQzC,IAAaC,kBAAkB,GAA/B,MAAaA,kBAAkB;EAO7BC,YAAoBC,MAAc,EAAUC,KAAqB;IAA7C,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IALjD,KAAAC,SAAS,GAAG,IAAIP,SAAS,CAAC;MACxBQ,IAAI,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACzEC,QAAQ,EAAE,IAAIZ,WAAW,CAAC,EAAE;KAC7B,CAAC;EAEmE;EAErEa,KAAKA,CAAA;IACHC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAAC;IACjC,IAAG,IAAI,CAACR,SAAS,CAACS,KAAK,EAAC;MAAI;MAC1B,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,EAAE,IAAI,CAACV,SAAS,CAACQ,KAAK,CAAC,CAAC;KACtD,MAAI;MACHG,KAAK,CAAC,qBAAqB,CAAC;;EAEhC;CAED;AAlBYf,kBAAkB,GAAAgB,UAAA,EAL9BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWnB,kBAAkB,CAkB9B;SAlBYA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}